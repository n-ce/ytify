name: 'publish'

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # Desktop
          - platform: 'macos-latest' 
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' 
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

          # Mobile
          - platform: 'macos-latest'  # iOS
            args: '--target aarch64-apple-ios'
            mobile: true
          - platform: 'ubuntu-22.04'  # Android
            args: '--target aarch64-linux-android'
            mobile: true

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin,aarch64-apple-ios' || matrix.platform == 'ubuntu-22.04' && 'aarch64-linux-android' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' && matrix.mobile != true
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: npm install

      - name: Build Tauri App (Desktop)
        if: matrix.mobile != true
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'ytify v__VERSION__'
          releaseBody: 'This is a rolling release, new commits trigger new releases. [View Changelog](https://github.com/n-ce/ytify/commits).'
          releaseDraft: false
          prerelease: true
          args: ${{ matrix.args }}
  publish-android:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install NDK
        run: sdkmanager "ndk;27.0.11902837"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust stable (Android targets)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

      - name: Install dependencies
        run: pnpm install

      - name: Build Android app
        run: npm tauri android build -v
        env:
          NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837

      - name: Extract Android signing key from env
        run: |
          echo "${{ secrets.ANDROID_RELEASE_KEYSTORE }}" > src-tauri/gen/android/release.jks.base64
          base64 -d src-tauri/gen/android/release.jks.base64 > src-tauri/gen/android/release.decrypted.jks

      # - name: Sign APK
      #   run: |
      #     ${{ env.ANDROID_HOME }}/build-tools/34.0.0/apksigner sign --ks src-tauri/gen/android/release.decrypted.jks \
      #       --ks-key-alias ${{ secrets.ANDROID_RELEASE_KEY }} \
      #       --ks-pass pass:${{ secrets.ANDROID_RELEASE_PASSWORD }} \
      #       --key-pass pass:${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }} \
      #       --out src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk \
      #       src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk

      - name: Get Node project version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Rename APK file
        run: |
          mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk \
             ./src-tauri/gen/android/app/build/outputs/apk/universal/release/ytify-${{ steps.package-version.outputs.current-version}}.apk

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: App v${{ steps.package-version.outputs.current-version}}
          tag_name: v${{ steps.package-version.outputs.current-version}}
          generate_release_notes: true
          files: |
            ./src-tauri/gen/android/app/build/outputs/apk/universal/release/ytify-${{ steps.package-version.outputs.current-version}}.apk

