import { Config, Context } from '@netlify/edge-functions';
import { fetcher, shuffle } from './commons';

export default async (_: Request, context: Context) => {

  const { id } = context.params;
  const cgeo = context.geo.country?.code || 'IN';

  if (!id || id.length < 11) return;
  const keys = Netlify.env.get('RAPID_API_KEYS')!.split(',');

  shuffle(keys);

  const streamData = await fetcher(cgeo, keys, id);
  const data = {
    info: 'data generated by ytify',
    title: streamData.title,
    uploader: streamData.channelTitle,
    uploaderUrl: '/channel/' + streamData.channelId,
    duration: streamData.lengthSeconds,
    audioStreams: streamData.adaptiveFormats
      .filter(_ => _.mimeType.startsWith('audio'))
      .map(_ => ({
        url: _.url,
        quality: `${Math.floor(_.bitrate / 1000)} kbps`,
        mimeType: _.mimeType,
        codec: _.mimeType.split('codecs="')[1]?.split('"')[0],
        bitrate: _.bitrate,
        contentLength: _.contentLength
      })),
    relatedStreams: [],
    subtitles: [],
    livestream: streamData.isLiveContent
  };

  return new Response(JSON.stringify(data), {
    headers: { 'content-type': 'application/json' },
  });
};

export const config: Config = {
  path: '/streams/:id',
};

